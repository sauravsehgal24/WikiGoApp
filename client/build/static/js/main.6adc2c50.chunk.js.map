{"version":3,"sources":["components/splashPage/navBar/navBar.js","components/splashPage/allArticlesPage/allArticles.js","components/splashPage/articlePage/article.js","components/splashPage/addArticle/addArticle.js","components/splashPage/editPage/editPage.js","components/splashPage/splashPage.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","useState","navHeading","setNavHeading","setNavHeadingFunc","name","Fragment","Navbar","className","expand","Toggle","aria-controls","Collapse","id","Nav","Link","onClick","style","color","to","href","target","AllArticles","props","articles","articlesState","setArticlesState","useEffect","axios","get","then","res","articlesArray","data","console","log","catch","err","map","article","Article","articleState","setArticleState","match","params","Button","variant","size","author","genere","AddArticle","setName","setAuthor","setGenere","bindInput","e","input","value","Card","InputGroup","Prepend","Text","FormControl","aria-label","aria-describedby","onChange","payload","put","history","push","addArticle","EditArticle","editArticle","SplashPage","Container","fluid","exact","path","component","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6adc2c50.chunk.js","sourcesContent":["import React, { Component, useState, setState } from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport { Route, Link, BrowserRouter as Router } from \"react-router-dom\";\r\nimport \"./navBar.css\";\r\n\r\nexport default function NavBar() {\r\n \r\n  const [navHeading, setNavHeading] = useState('All Articles');\r\n\r\n  const setNavHeadingFunc = function (name){\r\n    setNavHeading(name);\r\n  }\r\n\r\n  return ( \r\n    <React.Fragment>\r\n      <Navbar  className=\"navBar\" expand=\"lg\" >\r\n        <h4> | {navHeading}</h4>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"ml-auto\">\r\n            <Nav.Link className=\"mr-5 fontSize\"  >\r\n              <Link onClick={()=> setNavHeadingFunc('All Articles')} style={{ color: \"black\" }} to=\"/\">\r\n                All Articles\r\n              </Link>\r\n            </Nav.Link>\r\n            <Nav.Link className=\"mr-5 fontSize\"  >\r\n              <Link onClick={()=> setNavHeadingFunc('Add New Article')} style={{ color: \"black\" }} to=\"/article/add\">\r\n                Add New Article\r\n              </Link>\r\n            </Nav.Link>\r\n                <a className=\"mr-5 mt-2 fontSize\" href='https://www.linkedin.com/in/saurav-sehgal/' target='_blank'>My Linkedin</a>\r\n                <a className=\"mr-5 mt-2 fontSize\" href='https://github.com/sauravsehgal24' target='_blank'>My Github</a>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","//dependencies\r\nimport React, { Component, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n \r\nexport default function AllArticles(props) {\r\n  var [articlesState, setArticlesState] = useState({\r\n    articles: []\r\n  });\r\n \r\n  useEffect(() => {\r\n      axios\r\n        .get(\"/api/articles\")\r\n        .then(res => {\r\n          const { data: articlesArray } = res;\r\n          setArticlesState({\r\n            articles: [...articlesState.articles, ...articlesArray]\r\n          });\r\n          console.log(articlesState);\r\n        })\r\n        .catch(err => {\r\n          throw err;\r\n        })}, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n     \r\n          <h1><u>Articles</u></h1>\r\n        {\r\n            articlesState.articles.map((article)=>{\r\n               return <Link to={`/article/${article.name}`}><h3>{article.name}</h3></Link>\r\n            })\r\n        }\r\n     \r\n    </React.Fragment>\r\n  );\r\n}\r\n","//dependencies\r\nimport React, { Component, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n \r\nexport default function Article(props) {\r\n  var [articleState, setArticleState] = useState({\r\n    article: {}\r\n  });\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/api/articles/\" + props.match.params.name)\r\n      .then(res => {\r\n        console.log(res);\r\n        const { data: article } = res;\r\n        setArticleState({ ...articleState, article });\r\n      })\r\n      .catch(err => {\r\n        throw err;\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h1>\r\n        <u>{articleState.article.name}</u>\r\n        <Link to={'/article/edit/'+ articleState.article.name}>\r\n        <Button variant=\"link\" size=\"lg\">Edit</Button>\r\n        </Link>\r\n      </h1>\r\n      <h3>Author: {articleState.article.author}</h3>\r\n      <h3>Genere: {articleState.article.genere}</h3>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","//dependencies\r\nimport React, { Component, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button, InputGroup, FormControl, Card } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function AddArticle(props) {\r\n  \r\n  const [name, setName] = useState('')\r\n  const [author, setAuthor] = useState('')\r\n  const [genere, setGenere] = useState('')\r\n\r\n  const bindInput = (e,input) => {\r\n        if(input === \"Name\"){\r\n            setName(e.target.value); \r\n        }\r\n        else if(input === \"Author\"){\r\n            setAuthor(e.target.value); \r\n        }\r\n        else{\r\n            setGenere(e.target.value); \r\n        }\r\n  }\r\n\r\n  const addArticle = () =>{\r\n    console.log(`name: ${name}  author=${author} genere=${genere}`)\r\n    const payload = {\r\n        name,\r\n        author,\r\n        genere\r\n    }\r\n\r\n    axios\r\n      .put(\"/api/articles/\"+name , payload)\r\n      .then(res => {\r\n        console.log(res)\r\n        props.history.push('/')\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      });\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <Card>\r\n            <h1>New Article </h1>\r\n            <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"basic-addon1\">Name</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                aria-label=\"Name\"\r\n                aria-describedby=\"basic-addon1\"\r\n                onChange={(e)=>{bindInput(e,'Name')}}\r\n                />\r\n            </InputGroup>\r\n\r\n            <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"basic-addon1\">Author</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                aria-label=\"Author\"\r\n                aria-describedby=\"basic-addon1\"\r\n                onChange={(e)=>{bindInput(e,'Author')}}\r\n                />\r\n            </InputGroup>\r\n\r\n            <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"basic-addon1\">Genere</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                aria-label=\"Genere\"\r\n                aria-describedby=\"basic-addon1\"\r\n                onChange={(e)=>{bindInput(e,'Genere')}}\r\n                />\r\n            </InputGroup>\r\n            <Button variant=\"primary\" size=\"lg\" onClick={()=>addArticle()}>Add</Button>\r\n            <Button className=\"mt-3\" variant=\"danger\" size=\"lg\" onClick={()=>props.history.push('/')}>Cancel</Button>\r\n        </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","//dependencies\r\nimport React, { Component, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button, InputGroup, FormControl, Card } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function EditArticle(props) {\r\n\r\n  const [name, setName] = useState('')\r\n  const [author, setAuthor] = useState('')\r\n  const [genere, setGenere] = useState('')\r\n\r\n  const bindInput = (e,input) => {\r\n      if(input === \"Author\"){\r\n        setAuthor(e.target.value); \r\n      }\r\n      else if(input === \"Genere\"){\r\n          setGenere(e.target.value);\r\n      }\r\n      else{\r\n        setName(e.target.value);\r\n    }\r\n  }\r\n\r\n  const editArticle = () =>{\r\n    const payload = {\r\n        name,\r\n        author,\r\n        genere\r\n    }\r\n\r\n    axios\r\n      .put(\"/api/articles/\"+props.match.params.name , payload)\r\n      .then(res => {\r\n          console.log(res)\r\n        props.history.push('/')\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      });\r\n  }\r\n \r\n  return (\r\n    <React.Fragment>\r\n        <Card>\r\n            <h1>Edit Article <i>\"{props.match.params.name}\"</i></h1>\r\n            <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"basic-addon1\">Name</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                aria-label=\"Name\"\r\n                aria-describedby=\"basic-addon1\"\r\n                onChange={(e)=>{bindInput(e,'Name')}}\r\n                />\r\n            </InputGroup>\r\n\r\n            <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"basic-addon1\">Author</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                aria-label=\"Author\"\r\n                aria-describedby=\"basic-addon1\"\r\n                onChange={(e)=>{bindInput(e,'Author')}}\r\n                />\r\n            </InputGroup>\r\n\r\n            <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"basic-addon1\">Genere</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                aria-label=\"Genere\"\r\n                aria-describedby=\"basic-addon1\"\r\n                onChange={(e)=>{bindInput(e,'Genere')}}\r\n                />\r\n            </InputGroup>\r\n            <Button variant=\"primary\" size=\"lg\" onClick={()=>editArticle()}>Update</Button>\r\n            <Button className=\"mt-3\" variant=\"danger\" size=\"lg\" onClick={()=>props.history.push('/')}>Cancel</Button>\r\n        </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","//dependencies\r\nimport React, { Component } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { Route, Link, BrowserRouter as Router, Switch } from \"react-router-dom\";\r\n\r\n//components\r\nimport NavBar from \"./navBar/navBar\";\r\nimport AllArticles from \"./allArticlesPage/allArticles\";\r\nimport Article from \"./articlePage/article\";\r\nimport AddArticle from './addArticle/addArticle';\r\nimport EditArticle from './editPage/editPage';\r\n \r\n//files\r\nimport \"./splashPage.css\";\r\n\r\nexport default function SplashPage(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        <NavBar />\r\n        <Container className=\"splashPageContainer\" fluid>\r\n          <Switch>\r\n            <Route exact path=\"/article/add\" {...props} component={AddArticle} />\r\n            <Route exact path=\"/article/edit/:name\" component={EditArticle} />\r\n            <Route exact path=\"/article/:name\" component={Article} />\r\n            <Route exact path=\"/\"  component={AllArticles} />\r\n          </Switch>\r\n        </Container>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport SplashPage from './components/splashPage/splashPage';\r\n\r\nfunction App() {\r\n  return (\r\n    <SplashPage />\r\n  );\r\n}\r\n\r\nexport default App;\r\n ","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}